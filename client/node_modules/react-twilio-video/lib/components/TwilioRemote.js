'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _extends = require('babel-runtime/helpers/extends')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var LocalVideo = (function (_Component) {
    _inherits(LocalVideo, _Component);

    function LocalVideo() {
        _classCallCheck(this, LocalVideo);

        _get(Object.getPrototypeOf(LocalVideo.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(LocalVideo, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            // Let's just never update this component again.
            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement('div', { id: 'remote-media', style: {
                    width: '100%',
                    height: '100%'
                } });
        }
    }]);

    return LocalVideo;
})(_react.Component);

var TwilioRemote = (function (_Component2) {
    _inherits(TwilioRemote, _Component2);

    _createClass(TwilioRemote, null, [{
        key: 'contextTypes',
        value: {
            conversation: _react.PropTypes.object,
            participants: _react.PropTypes.array
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: _extends({}, _react.Component.defaultProps, {
            width: 100,
            height: 100
        }),
        enumerable: true
    }]);

    function TwilioRemote(props, context) {
        _classCallCheck(this, TwilioRemote);

        _get(Object.getPrototypeOf(TwilioRemote.prototype), 'constructor', this).call(this, props, context);
    }

    _createClass(TwilioRemote, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps, nextContext) {

            if (nextContext.conversation) {
                if (nextContext.participants) {

                    nextContext.participants.forEach(function (participant) {
                        if (participant.media.attachments.size === 0) {
                            participant.media.attach('#remote-media');
                        }
                    });

                    var newsA = _reactDom2['default'].findDOMNode(this.refs.remoteVideo);
                    var videos = newsA.getElementsByTagName('video') || [];

                    [].forEach.call(newsA.getElementsByTagName('video'), function (video) {
                        video.style.cssText = 'width: 100%;height: 100%;';
                    });
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { ref: 'remoteVideo', style: _extends({
                        width: 100,
                        height: 100,
                        background: 'black'
                    }, this.props.style) },
                _react2['default'].createElement(LocalVideo, null)
            );
        }
    }]);

    return TwilioRemote;
})(_react.Component);

exports['default'] = TwilioRemote;
module.exports = exports['default'];