'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _extends = require('babel-runtime/helpers/extends')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var LocalVideo = (function (_Component) {
    _inherits(LocalVideo, _Component);

    function LocalVideo() {
        _classCallCheck(this, LocalVideo);

        _get(Object.getPrototypeOf(LocalVideo.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(LocalVideo, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            // Let's just never update this component again.
            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement('div', { id: 'local-media', style: {
                    width: '100%',
                    height: '100%'
                } });
        }
    }]);

    return LocalVideo;
})(_react.Component);

var TwilioLocal = (function (_Component2) {
    _inherits(TwilioLocal, _Component2);

    function TwilioLocal() {
        _classCallCheck(this, TwilioLocal);

        _get(Object.getPrototypeOf(TwilioLocal.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(TwilioLocal, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.componentWillReceiveProps(this.props);
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _this = this;

            this.state = this.state || {};

            var previewMedia = undefined;
            var newsA = _reactDom2['default'].findDOMNode(this.refs.localVideo);
            var video = newsA.getElementsByTagName('video')[0];

            if (!this.state.previewMedia) {
                previewMedia = new Twilio.Conversations.LocalMedia();
                console.log(previewMedia);
            } else {
                previewMedia = this.state.previewMedia;
            }

            if (!this.state.previewMedia || !_.isEqual(nextProps.muted, this.state.muted) || !_.isEqual(nextProps.video, this.state.video) || !_.isEqual(nextProps.audio, this.state.audio)) {

                if (this.state.previewMedia) {
                    previewMedia.removeStream(this.state.mediaStream);
                }

                if (!nextProps.video && !nextProps.audio) {

                    if (this.state.mediaStream) {
                        this.state.mediaStream.stop();
                    }

                    return this.setState({
                        video: false,
                        audio: false,
                        mediaStream: null
                    });
                }

                Twilio.Conversations.getUserMedia({ video: nextProps.video, audio: nextProps.audio }).then(function (mediaStream) {
                    var stateUpdate = {
                        mediaStream: mediaStream
                    };

                    previewMedia.addStream(mediaStream);

                    previewMedia.mute(nextProps.muted || false);

                    if (previewMedia !== _this.state.previewMedia) {
                        stateUpdate.previewMedia = previewMedia;
                    }

                    if (nextProps.muted !== _this.state.muted) {
                        stateUpdate.muted = nextProps.muted;
                    }

                    if (nextProps.video !== _this.state.video) {
                        stateUpdate.video = nextProps.video;
                    }

                    if (nextProps.audio !== _this.state.audio) {
                        stateUpdate.audio = nextProps.audio;
                    }

                    _this.setState(stateUpdate, function () {
                        var newsA = _reactDom2['default']['default'].findDOMNode(_this.refs.localVideo);
                        var video = newsA.getElementsByTagName('video')[0];

                        if (!video) {
                            previewMedia.attach('#local-media');
                        } else {
                            video.style.cssText = 'width: 100%;height: 100%;';
                        }
                    });

                    if (video) {
                        video.style.cssText = 'width: 100%;height: 100%;';
                    }
                }, function (error) {
                    console.error('Unable to access local media', error);
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { ref: 'localVideo', style: _extends({
                        background: 'black'
                    }, this.props.style) },
                _react2['default'].createElement(LocalVideo, null)
            );
        }
    }], [{
        key: 'propTypes',
        value: {
            video: _react.PropTypes.oneOfType([_react2['default'].PropTypes.object, _react2['default'].PropTypes.bool]),
            audio: _react.PropTypes.oneOfType([_react2['default'].PropTypes.object, _react2['default'].PropTypes.bool])
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: _extends({}, _react.Component.defaultProps, {
            video: false,
            audio: false,
            width: 100,
            height: 100
        }),
        enumerable: true
    }]);

    return TwilioLocal;
})(_react.Component);

exports['default'] = TwilioLocal;
module.exports = exports['default'];